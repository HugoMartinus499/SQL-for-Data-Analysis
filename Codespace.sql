-- SELECT statement is to select the columns, * means all columns
-- FROM statement is to select the database
-- LIMIT statement is to limit number of rows
-- Always use a ; when executing and statements should be capital letters
-- ORDER BY should always go between FROM and LIMIT, 
-- ORDER BY sorts in ascending order, add DESC to sort in descending order
-- ASC to sort in ascending order, order is determined by what it is next to
-- WHERE statement goes after FROM but before ORDER BY, it is a filtering statement
-- WHERE statement can also be used for non-numeric, just a ' on either side eg. 'Company Name'
-- AS statement can be used to name columns created as a result of arithmetic procedures
-- LIKE statement can be used in conjunction with WHERE to filter for partial filters
-- Using a wildcard like '%' in LIKE statement informs search, 
    -- % before string searches for any number of characters before string, ie. "ends with"
    -- % after string searches for any number of characters after string, ie. "starts with"
    -- % before and after string searches for number of characters before and after, ie. "contains"
-- IN statement can be used in conjunction with WHERE to filter for multiple identifiers, works like "is one of"
-- NOT statement is great in conjunction with LIKE and IN to find all registrations not fitting criteria, works like "is not"
-- AND and BETWEEN  operators are good for intervals and stacking filters
-- OR is great for finding differences in the data, can be used with all other operators using parentheses to stack filters
-- JOIN is used with ON to pull data from multiple tables, ON is used to determine what columnn is used to JOIN the tables
-- Aliases can be used to not have to type out long table names, can be done with the AS statement or with just a space after the name and then the alias
-- It is important to name columns, otherwise they might fuse together when joining

-- CODING Examples --
-- SQL Basics

-- 15 events from web_events
SELECT occurred_at, account_id, channel
	FROM web_events
    LIMIT 15;

-- 10 latest orders from order
SELECT id, occurred_at, total_amt_usd
	FROM orders
ORDER BY occurred_at
    LIMIT 10;

-- 5 largest orders from orders    
SELECT id, account_id, total_amt_usd
	FROM orders
ORDER BY total_amt_usd DESC
    LIMIT 5;

-- 20 smallest orders from orders    
SELECT id, account_id, total_amt_usd
	FROM orders
ORDER BY total_amt_usd
    LIMIT 20;

-- all orders sorted in ascending order by account and then displaying the largest orders per account in descending order
SELECT id, account_id, total_amt_usd
	FROM orders
ORDER BY account_id ASC, total_amt_usd DESC;

-- all orders sorted by largest orders in descending order and then if there is identical amounts, they are sorted by account in ascending order
SELECT id, account_id, total_amt_usd
	FROM orders
ORDER BY total_amt_usd DESC, account_id ASC;

-- 5 first orders and all columns where gloss amount is greater than or equal to 1000 dollars 
SELECT *
	FROM orders
    WHERE gloss_amt_usd >= 1000
    LIMIT 5;

-- 10 first orders and all columns where total amount is less than 500 dollars    
SELECT *
	FROM orders
    WHERE total_amt_usd < 500
    LIMIT 10;

-- Name, website and primary point of contact for Exxon Mobil
SELECT name, website, primary_poc
	FROM accounts
    WHERE name = 'Exxon Mobil';

-- avg unit price for the 10 first orders
SELECT id, account_id, standard_amt_usd/standard_qty AS unit_price
	FROM orders
    LIMIT 10;
    
-- percentage of revenue generated by poster sales
SELECT id, account_id, poster_amt_usd/(standard_amt_usd + poster_amt_usd + gloss_amt_usd)*100 AS perc_poster_rev
	FROM orders;

-- All companies with names that start with 'C'
SELECT *
	FROM accounts
    WHERE name LIKE 'C%';

-- All companies with names that contain the string 'one'
SELECT *
	FROM accounts
    WHERE name LIKE '%one%';

-- All companies with names that end with 's'    
SELECT *
	FROM accounts
    WHERE name LIKE '%s';

-- Name, primary point of contact and sales rep id for Walmart, Target and Nordstrom
SELECT name, primary_poc, sales_rep_id
	FROM accounts
    WHERE name IN ('Walmart', 'Target', 'Nordstrom');

-- All information for individuals contacted through channels organic or adwords   
SELECT *
	FROM web_events
    WHERE channel IN ('organic', 'adwords');

-- Name, primary point of contact and sales rep id for all except Walmart, Target and Nordstrom
SELECT name, primary_poc, sales_rep_id
	FROM accounts
    WHERE name NOT IN ('Walmart', 'Target', 'Nordstrom');

-- All information for individuals contacted through all channels except organic or adwords   
SELECT *
	FROM web_events
    WHERE channel NOT IN ('organic', 'adwords');

-- All companies with names that do not start with 'C'
SELECT *
	FROM accounts
    WHERE name NOT LIKE 'C%';

-- All companies with names that do not contain the string 'one'
SELECT *
	FROM accounts
    WHERE name NOT LIKE '%one%';

-- All companies with names that do not end with 's'    
SELECT *
	FROM accounts
    WHERE name NOT LIKE '%s';

-- all orders where standard_qty is over thousand and poster_qty and gloss_qty is 0
SELECT *
	FROM orders
    WHERE standard_qty >1000 
        AND poster_qty = 0 
        AND gloss_qty = 0;

-- all companies whose name does not start with c and ends with s  
SELECT *
	FROM accounts
WHERE name NOT LIKE 'C%' AND name LIKE '%s';

-- order date and gloss_qty for all gloss_qty between 24 and 29 in descending order to see if values at endpoint are included    
SELECT occurred_at, gloss_qty
	FROM orders
    WHERE gloss_qty BETWEEN 24 AND 29
ORDER BY gloss_qty DESC;
    -- answer is that yes it includes values at endpoint

-- all information on  individuals who where contacted through organic or adwords channel and started their account sometime in 2016 sorted newest to oldest    
SELECT *
	FROM web_events
    WHERE channel IN ('organic', 'adwords') 
    AND occurred_at BETWEEN '2016-01-01' AND '2017-01-01'
ORDER BY occurred_at DESC;

-- List of orders where standard_qty is zero and either gloss_qty or poster_qty is greater than 1000
SELECT *
	FROM orders
    WHERE standard_qty = 0 AND (gloss_qty > 1000 OR poster_qty > 1000);
    
-- all company names that start with C or W and the primary contact contains ana or Ana, but does not contain eana
SELECT name
	FROM accounts
    WHERE (name LIKE 'C%' OR name LIKE 'W%') 
        AND ((primary_poc LIKE '%ana%' OR primary_poc LIKE '%Ana%') 
        AND primary_poc NOT LIKE '%eana%');


-- JOIN SQL

-- Pulling all data from accounts and joining orders by account id
SELECT accounts.*, orders.*
	FROM accounts
    JOIN orders 
        ON accounts.id = orders.account_id;
    
-- Pulling all qty from orders and joining the website and primary_poc from accounts
SELECT orders.standard_qty, orders.gloss_qty, orders.poster_qty, accounts.website, accounts.primary_poc
	FROM orders
    JOIN accounts
        ON orders.account_id = accounts.id;

-- Webevents with time, channel, poc and name for walmart
SELECT we.occurred_at, we.channel, a.primary_poc, a.name
    FROM web_events we
    JOIN accounts a
        ON we.account_id = a.id
    WHERE a.name = 'Walmart';

-- Sales reps and their region and account sorted A-Z
SELECT r.name region, s.name rep, a.name account
    FROM sales_reps s
    JOIN region r
        ON s.region_id = r.id
    JOIN accounts a
        ON a.sales_rep_id = s.id
ORDER BY a.name;

-- Region for every order, unit price and account name
SELECT r.name region, a.name account, 
           o.total_amt_usd/(o.total + 0.01) unit_price
    FROM region r
    JOIN sales_reps s
        ON s.region_id = r.id
    JOIN accounts a
        ON a.sales_rep_id = s.id
    JOIN orders o
        ON o.account_id = a.id;